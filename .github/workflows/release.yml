name: Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'B9_Pagination.sln'

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration $BUILD_CONFIG --no-restore
    - name: Test
      run: dotnet test --configuration $BUILD_CONFIG --no-build --verbosity normal
  publish-nuget:
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'B9_Pagination.sln'
      
    steps:
    - name: Get Build Version
      run: |
        Import-Module .\build\GetBuildVersion.psm1
        Write-Host $Env:GITHUB_REF
        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    - name: Restore dependencies
      run: nuget restore $SOLUTION
    - name: Publish
      if: startsWith(github.ref, 'refs/heads/release')
      run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
  create-github-release:
    needs: publish-nuget
    runs-on: ubuntu-latest
    
    steps:
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
